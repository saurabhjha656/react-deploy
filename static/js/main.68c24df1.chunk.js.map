{"version":3,"sources":["firebase.js","SidebarChats.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","SidebarChats","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68c24df1.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCdB0H4_m9_4N5rHX3f8qtw4_B4kI5Df9E\",\n    authDomain: \"whatsapp-mern-6aefa.firebaseapp.com\",\n    projectId: \"whatsapp-mern-6aefa\",\n    storageBucket: \"whatsapp-mern-6aefa.appspot.com\",\n    messagingSenderId: \"59540135662\",\n    appId: \"1:59540135662:web:d4aa8fa79a4deaf50c9dff\"\n  };\n\n  const firebaseapp = firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export { auth, provider };\n  export default db;","import React, {useEffect, useState} from 'react';\nimport {Avatar} from \"@material-ui/core\";\nimport './SidebarChats.css';\nimport db from './firebase';\nimport {Link} from 'react-router-dom';\n\nfunction SidebarChats({id,name,addNewChat}) {\n    const [seed, setSeed] = useState(\"\");\n    const [messages, setMessages] = useState(\"\");\n    \n    useEffect(() => {\n        if(id){\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            })\n        }\n    }, [id]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));        \n    }, []);\n\n    const createChat = () => {\n        const roomName = prompt(\"Please Enter Name for Chat\");\n\n        if(roomName){\n            db.collection(\"rooms\").add({\n                name: roomName\n            })\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`} key={id}>\n            <div className=\"sidebarChat\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n                <div className=\"sidebarChat_info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n        \n    ) : (\n        <div onClick={createChat} className=\"sidebarChat\">\n            <h3 className=\"add-new-chat-title\">Add New Chat</h3>\n        </div>\n    )\n}\n\nexport default SidebarChats\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({reducer, initialState, children}) => (\n    <StateContext.Provider value={useReducer (reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react'\nimport \"./Sidebar.css\"\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\n\nimport {Avatar, IconButton} from '@material-ui/core'\nimport SidebarChats from \"./SidebarChats.js\"\nimport db from \"./firebase\";\nimport {useStateValue} from \"./StateProvider\";\n\n\nfunction Sidebar() {\n\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\n            setRooms(snapshot.docs.map((doc) => \n                ({\n                    id: doc.id,\n                    data: doc.data(),\n                })\n            ))\n        ))\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar_header\">\n\n                    <Avatar src={user?.photoURL} />\n\n                <div className=\"sidebar_headerRight\"> \n\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n\n                </div>\n            </div>\n\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchOutlinedIcon />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n            </div>\n\n            <div className=\"sidebar_chats\">\n                <SidebarChats addNewChat/>\n                {rooms.map(room => (\n                    <SidebarChats key={room.id} id={room.id}\n                    name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useState,useEffect} from 'react';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\nimport MicIcon from '@material-ui/icons/Mic';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport './Chat.css';\nimport { useParams } from 'react-router-dom';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport {useStateValue} from \"./StateProvider\";\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const {roomId} = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(()=>{\n        if(roomId){\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\n                setRoomName(snapshot.data().name);\n            });\n\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            });\n\n        }\n    },[roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));        \n    }, [roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className='chat'>\n            <div className='chat_header'>\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n                <div className='chat_headerInfo'>\n                    <h3 className='chat-room-name'>{roomName}</h3>\n                    <p className='chat-room-last-seen'>\n                        Last seen {\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.\n                            timestamp?.toDate()\n                        ).toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchOutlined/>\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert/>\n                    </IconButton>\n                    \n                </div>\n            </div>\n            <div className='chat_body'>\n                {messages.map(message => (\n                    <p className={`chat_message ${ message.name == user.displayName && 'chat_receiver'}`}>\n                        <span className=\"chat_name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat_timestemp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\n                    </p>\n                ))}\n            </div>\n            <div className='chat_footer'>\n                <InsertEmoticonIcon />\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\n                    <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\n                </form>\n                <MicIcon/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Chat","export const initialState = {\n    user:null,\n};\n\nexport const actionTypes = {\n    SET_USER : \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport './Login.css';\nimport {auth,provider} from './firebase';\nimport { actionTypes } from './reducer';\nimport { useStateValue } from './StateProvider';\n\nfunction Login() {\n    const [{},dispatch] = useStateValue();\n    const signIn = () => {\n        auth\n            .signInWithPopup(provider)\n            .then((result) => {\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                })\n            })\n            .catch((error) => alert(error.message));\n    }\n    return (\n        <div className=\"login\">\n           <div className=\"login_container\">\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \n                <div className=\"login_text\">\n                    <h1>Sign in to Whatsapp</h1>\n                </div>\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\n           </div>\n        </div>\n    );\n}\n\nexport default Login","import './App.css';\nimport React, {useState} from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Login from './Login';\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n        {!user ? (\n          <Login/>\n        ):(\n          <div className=\"app_body\">\n            <Router>\n              <Sidebar/>\n              <Switch>\n                <Route path=\"/rooms/:roomId\">\n                  <Chat/>\n                </Route>\n                <Route path=\"/\">\n                  <Chat/>\n                </Route>              \n              </Switch>            \n            </Router>\n          </div>\n        )}\n        \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}